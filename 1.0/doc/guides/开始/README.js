Ext.data.JsonP.开始({"guide":"<h1>Mqa简介</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ol>\n<li><a href='#!/guide/开始-section-1'>注册假名和监听事件</a></li>\n<li><a href='#!/guide/开始-section-2'>移除假名,事件, 监听函数</a></li>\n<li><a href='#!/guide/开始-section-3'>简单的判断当前状态是否匹配媒体查询或假名</a></li>\n<li><a href='#!/guide/开始-section-4'>不使用假名</a></li>\n</ol>\n</div>\n\n<p>Mqa是一个简单媒体查询假名库, 是对浏览器原生的matchMedia做了一层简单的封装,\n提供了更加方便简洁的事件接口以及媒体字符串的简写注册.目前作为KISSY Gallery的一个组件存在,\n当然, 您只需做简单的修改就可以独立于KISSY运行(毕竟, 只用到了KISSY的Loader -.-!).</p>\n\n<p>主要优点:</p>\n\n<ol>\n<li>接口更加直接方便</li>\n<li>统一管理媒体查询对象: 不用自己到处管理MediaQueryList对象, Mqa帮您做了统一管理</li>\n</ol>\n\n\n<p><a href=\"#!/example\">DEMO</a>\n<a href=\"#!/api/Mqa\">API参考</a></p>\n\n<h2 id='开始-section-1'>注册假名和监听事件</h2>\n\n<pre class='inline-example '><code>//引入Mqa模块\nKISSY.use(\"gallery/mqa/index\", function(S, Mqa){\n    //添加假名\n    <a href=\"#!/api/Mqa-method-add\" rel=\"Mqa-method-add\" class=\"docClass\">Mqa.add</a>(\"smallscreen\", \"(min-width: 480px)\");\n    //监听媒体查询改变事件\n    <a href=\"#!/api/Mqa-method-on\" rel=\"Mqa-method-on\" class=\"docClass\">Mqa.on</a>(\"smallscreen\", function(mql){\n        alert(\"当前处于\" + mql.matches? \"小\":\"大\" + \"屏幕\");\n    }, true)\n});\n</code></pre>\n\n<p>在上述代码中, 我们首先引入了Mqa模块, 接着将(min-width: 480px)媒体字符串定义为smallscreen,\n接着我们调用Mqa提供的on方法监听屏幕尺寸的改变, 当屏幕尺寸在断点处(480px)发生改变时,即会触发我们绑定的事件函数.</p>\n\n<p>在事件函数中, 会传入一个原生的<a href=\"https://developer.mozilla.org/en-US/docs/DOM/MediaQueryList\">MediaQueryList</a>\n对象.</p>\n\n<p>通过判断mql的matches属性来决定弹出的对话框文档. 第三个参数为true,表明我们需要立即执行一次监听函数,\n这主要适用于需要初始化的场景中.若忽略第三个参数,则仅会在媒体状态改变时调用函数.</p>\n\n<h2 id='开始-section-2'>移除假名,事件, 监听函数</h2>\n\n<p>在有些情况下,你也许需要移除假名或者相关的事件和函数, 这可以调用remove, off来完成,\n具体可参考<a href=\"#!/api/Mqa-method-remove\" rel=\"Mqa-method-remove\" class=\"docClass\">API文档</a></p>\n\n<h2 id='开始-section-3'>简单的判断当前状态是否匹配媒体查询或假名</h2>\n\n<p>仅需调用<a href=\"#!/api/Mqa-method-match\" rel=\"Mqa-method-match\" class=\"docClass\">Mqa.match</a>方法, 传入假名或媒体查询字符串即可.</p>\n\n<h2 id='开始-section-4'>不使用假名</h2>\n\n<p>Mqa还算灵活, 若不想使用假名, 即不喜欢对每一个媒体查询字符串都调用一次add注册的场景.\n完全可以直接调用Mqa的on, off, match方法, Mqa会在假名不存在的情况下, 将传入的字符串当作正常的媒体查询字符串.</p>\n","title":"开始使用Mqa"});